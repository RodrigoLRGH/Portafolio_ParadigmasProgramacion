<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rodrigo López Rojas</title>
    <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/</link>
    <description>Recent content in Posts on Rodrigo López Rojas</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica0/</guid>
      <description>&lt;h1 id=&#34;practica-0-uso-de-repositorios&#34;&gt;Practica 0: Uso de repositorios&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Esta práctica está dividida en tres secciones, en cada una de ellas se realizó algo diferente, pero que de igual forma complementa lo que es la implementación de repositorios y la implementación de Hugo para generar páginas estáticas.&lt;/p&gt;&#xA;&lt;h2 id=&#34;primera-sesión-sintaxis-y-uso-de-markdown&#34;&gt;&lt;strong&gt;Primera sesión: Sintaxis y uso de markdown&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;En la primera sesión se nos mostró de forma rápida las primeras herramientas que íbamos a utilizar durante el semestre. Estas fueron Hugo y Markdown, pero en esta sesión fue más que nada para aprender a usar markdown y descubrir las opciones que ofrecían, entre ellas está:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica1/</guid>
      <description>&lt;h1 id=&#34;practica-1-elementos-básicos-de-los-lenguajes-de-programación&#34;&gt;Practica 1: Elementos básicos de los lenguajes de programación&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Para esta practica el profesor proporciono un codigo en C para gestionar una blibloteca, con el objetivo de identificar los elementos fundamentales de los lenguajes de programación que son: nombres, objetos, entornos, bloques, alcance, administración de memoria, expresiones, comandos, secuencia, selección, iteración, recursión, subprogramas, y tipos de datos.&lt;/p&gt;&#xA;&lt;h3 id=&#34;nombres-y-objetos&#34;&gt;&lt;strong&gt;Nombres y Objetos&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;--biblitecac&#34;&gt;- bibliteca.c&lt;/h4&gt;&#xA;&lt;h5 id=&#34;variables-globales&#34;&gt;Variables globales&lt;/h5&gt;&#xA;&lt;p&gt;En el codigo se puede encontrar dos variables globales de tipo entero&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica2/</guid>
      <description>&lt;h1 id=&#34;practica-2-programacion-orientado-a-objetos&#34;&gt;Practica 2: Programacion orientado a objetos&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Para esta practica el profesor proporciono un codigo en Python para gestionar una blibloteca, con el objetivo de identificar los elementos fundamentales de la programacion orientada a objetos.&lt;/p&gt;&#xA;&lt;h3 id=&#34;clases&#34;&gt;&lt;strong&gt;Clases&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;En el codigo contamos con las siguientes clases:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Genre&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Book&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DigitaBook&lt;/span&gt;(Book):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Member&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Library&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;atributos&#34;&gt;&lt;strong&gt;Atributos&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Cada una de las clases anteriormente mencionadas tinen su atributos y metodos&lt;/p&gt;&#xA;&lt;h4 id=&#34;--genre&#34;&gt;- Genre&lt;/h4&gt;&#xA;&lt;p&gt;Este cuenta con atributos con constantes de clase, y un metodo para retornar una lista de todos los generos disponibles&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica3/</guid>
      <description>&lt;h1 id=&#34;práctica-3-funcionamiento-de-haskell&#34;&gt;Práctica 3: Funcionamiento de Haskell&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;En esta práctica se van a seguir los pasos de un blog para aprender a crear una aplicación de tareas pendientes con Haskell y Stack.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;--proceso-al-crear-la-aplicacion&#34;&gt;- Proceso al crear la aplicacion&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-iniciar-el-entorno-de-desarrollo-de-haskell-con-stack&#34;&gt;&lt;strong&gt;1. Iniciar el entorno de desarrollo de Haskell con Stack&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;utilizar-el-comando&#34;&gt;&lt;strong&gt;Utilizar el comando &lt;code&gt;$ stack new todo&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/stacknewtodo.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;&#xA;&lt;img src=&#34;./images/stacknewtododos.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;verificar-la-creación-de-los-archivos-con&#34;&gt;&lt;strong&gt;Verificar la creación de los archivos con &lt;code&gt;$ ls todo&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/lstodo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;modificar-el-archivo-packageyaml&#34;&gt;&lt;strong&gt;Modificar el archivo package.yaml&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Agregar esto a dependencies:&#xA;-dotenv&#xA;-open-browser&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Portafolio_ParadigmasProgramacion/posts/practica4/</guid>
      <description>&lt;h1 id=&#34;práctica-4-paradigma-logico&#34;&gt;Práctica 4: Paradigma logico&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Prolog o PROgramming en LOG, es un lenguaje de programación lógico y declarativo.&lt;/p&gt;&#xA;&lt;p&gt;Funciona más como una base de conocimientos donde dices que cosas son verdaderas y cómo se relacionan. Esto permite responder preguntas preguntas haciendo una&#xA;búsqueda (consultando) en una base de hechos y reglas para deducir una respuesta (si es que se puede).&lt;/p&gt;&#xA;&lt;p&gt;El lenguaje Prolog tiene tres elementos diferentes:&lt;/p&gt;&#xA;&lt;p&gt;Hechos: El hecho es un predicado que es verdadero.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
